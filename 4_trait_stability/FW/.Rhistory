rel_min_height = 0.005,
scale = 1) +
scale_fill_viridis(discrete = TRUE) +
scale_color_viridis(discrete = TRUE) +
facet_wrap(~ Trial, nrow = 2, scales = "fixed") +
coord_cartesian(xlim = c(-2, 100)) +
scale_y_discrete(expand = expansion(add = c(0.2, 1.2))) +
geom_vline(data = mfr_avg,
aes(xintercept = avg_FHB),
color = "red",
linetype = "dashed") +
labs(x = "FHB Severity (%)", y = "Rater") +
theme_classic() +
theme(
legend.position = "none",
panel.spacing = unit(0.1, "lines"),
text = element_text(size = 8, family = "Helvetica"),
plot.margin = margin(t = 0,  # Top margin
r = 0,  # Right margin
b = 0,  # Bottom margin
l = 0)) # Left margin
print(mfr_rater_distribution)
ggsave("/Users/jcooper/Desktop/thesis_research/fhb_mineral/paper_figures/figure2_manual_field_ratings/results/fig2a_mfr_rater_distribution.png", plot = w_rater_distribution, width = 6, height = 4)
ggsave("/Users/jcooper/Desktop/thesis_research/fhb_mineral/paper_figures/figure2_manual_field_ratings/results/fig2a_mfr_rater_distribution.png", plot = mfr_rater_distribution, width = 6, height = 4)
w_rating <- read.csv("/Users/jcooper/Desktop/thesis_research/fhb_mineral/wheat_rover_fhb_phenotyping_model/manual_field_ratings/data/2022/wheat2022_manual_visual_disease_ratings.csv")
# Load and subset data
c <- read.csv("/Users/jcooper/Desktop/thesis_research/canopy_cover_master/loess/combined/data/loess_combo_AUPC_slope_exp.csv", check.names = FALSE)
# Subset into slope
c_slope_total <- c[, c(1, 30:34, 36:62)]
View(c_slope_total)
library(devtools)
install_github("lian0090/FW")
library(FW)
library(coda)
library(tidyverse)
library(ggplot2)
library(MASS)
c <- read.csv("/Users/jcooper/Desktop/thesis_research/canopy_cover_master/loess/combined/data/loess_combo_AUPC_slope_exp.csv", check.names = FALSE)
# Subset into three data frames, point, AUPC, and slope
c_point <- c[, 1:34]
c_slope <- c[, c(1, 30:34, 36:62)]
c_AUPC <- c[, c(1, 30:35)]
c_expslope <- c[, c(1, 30:34, 63)]
# Load and subset data
c <- read.csv("/Users/jcooper/Desktop/thesis_research/canopy_cover_master/loess/combined/data/loess_combo_AUPC_slope_exp.csv", check.names = FALSE)
# Subset into AUPC data only
c_expslope <- c[, c(1, 30:34, 63)]
# Filter out genotypes with rep count < 5
c_expslope <- c_expslope %>%
group_by(Genotype) %>%
mutate(rep_count = n()) %>%
ungroup() %>%
filter(rep_count > 4)
c_expslope %>%
summarise(n_distinct(Genotype))
# Code testing if scale of original trait changes range of slope values
# Multiplying exp slope by 10000 changes FW slopes to range from -.8 - .8 but does not change relative order of genotypes (top and bottom stay ~about the same, some small variation in order but not by a lot)
c_expslope$Exp <- c_expslope$Exp * 100
# Convert back to data frame
c_expslope <- as.data.frame(c_expslope)
# Remove NA
c_expslope <- na.omit(c_expslope)
# Make empty date frame
expslope_FW_b <- data.frame()
expslope_FW_yhat <- data.frame()
# For each column with point data
for (i in 7:7){
print(i)
# Set model
GibbsI = FW(y = c_expslope[,i],VAR = c_expslope$Genotype,ENV = c_expslope$Year, method="Gibbs",seed=12345,saveAt="GibbsI",nIter = 50000 ,burnIn = 5000)
# Genotype Slope
b <- data.frame(GibbsI$b)
colnames(b) <- "b"
# Predicted y values
yhat <- data.frame(GibbsI$yhat)
colnames(yhat) <- "yhat"
# Observed y values
y <- data.frame(GibbsI$y)
colnames(y) <- "y"
# Genotype
g <- c_expslope$Genotype
# Year
year <- c_expslope$Year
# Add column with data date to both data frames
GDD <- colnames(c_expslope[i]) # Save as object
b$GDD <- GDD
yhat$year <- year
yhat$Genotype <- g
yhat$y <- y
yhat$GDD <- GDD
# Keep saving to original empty data frame
expslope_FW_b <- rbind(expslope_FW_b, b)
expslope_FW_yhat <- rbind(expslope_FW_yhat, yhat)
}
# Format slope data
# Change Genotype to index to own column
expslope_FW_b  <- tibble::rownames_to_column(expslope_FW_b, "Genotype")
View(expslope_FW_b)
# Save results
write.csv(expslope_FW_b, "/Users/jcooper/Desktop/thesis_research/canopy_cover_master/stability/FW/data/FW_expslope_b.csv", row.names = FALSE)
# Format yhat data
y_yhat <- expslope_FW_yhat
#Unnest y list from data frame
y_yhat <- unnest(y_yhat, cols = 4)
# Save results
write.csv(y_yhat, "/Users/jcooper/Desktop/thesis_research/canopy_cover_master/stability/FW/data//FW_expslope_y.csv", row.names = FALSE)
library(tidyverse)
library(ggplot2)
library(agricolae)
library(tibble)
library(ggstream)
library(RColorBrewer)
library(gridExtra)
library(gtable)
library(grid)
library(egg)
library(ggpubr)
library(metan)
library(data.table)
library(ammistability)
library(plotly)
library(hrbrthemes)
library(heatmaply)
library(gridExtra)
library(gtable)
library(grid)
library(egg)
library(ggpubr)
library(scales)
library(devtools)
install_github("lian0090/FW")
library(FW)
library(coda)
library(MASS)
library(tidyverse)
library(ggplot2)
library(UpSetR)
library(ggupset)
library(ggpubr)
library(gridExtra)
library(gtable)
library(grid)
library(metan)
library(data.table)
library(ggridges)
library(magrittr)
# Load data for FW slopes
area_b <- read.csv("/Users/jcooper/Desktop/thesis_research/canopy_cover_master/stability/FW/data/FW_area_b.csv", check.names = FALSE)
exp_b <- read.csv("/Users/jcooper/Desktop/thesis_research/canopy_cover_master/stability/FW/data/FW_expslope_b.csv", check.names = FALSE)
# Transform GDD column into numeric identifiers
area_b$GDD[area_b$GDD == "AUPC"] <- 1
exp_b$GDD[exp_b$GDD == "Exp"] <- 2
# Make GDD numeric
area_b$GDD <- as.numeric(area_b$GDD)
exp_b$GDD <- as.numeric(exp_b$GDD)
# Normalize b for density calculation
area_b$d <- area_b$b
#exp_b$d <- exp_b$b * 1000
exp_b$d <- exp_b$b
# Combine data frames
ea <- rbind(area_b, exp_b)
# Filter out Exp slope
e_b <- ea %>%
filter(GDD == 2)
# Make b+1 column with transformed data to show FW slope
e_b$b1 <- e_b$b +1
exp_fw <- ggplot(e_b) + geom_point(aes(x=as.factor(GDD), y = b1), alpha = .08, color="navy") +
theme_classic() +
theme(legend.title=element_blank()) +
scale_x_discrete(breaks = c("2"), labels = c("600-1000"), guide = guide_axis(angle = 30)) +
scale_color_gradient(low="#F8766D", high="#00BCF4") +
geom_abline(intercept = 1, slope = 0, color = "red") +
scale_y_continuous(limits = c(-4, 8), breaks = seq(-4, 8, 1)) +
theme(axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.line.y=element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
theme(axis.text.x=element_text(size = 8))
exp_fw
AVS_FW_hist <- ggplot(e_b) +
geom_histogram(aes(x=b1)) +
theme_classic() +
xlab("600-1000 GDD") +
ylab("Count") +
geom_vline(xintercept = 1, color = "red")
AVS_FW_hist
View(e_b)
View(exp_b)
exp_b <- read.csv("/Users/jcooper/Desktop/thesis_research/canopy_cover_master/stability/FW/data/FW_expslope_b.csv", check.names = FALSE)
View(exp_b)
View(e_b)
# Filter out Area
a_b <- ea %>%
filter(GDD == 1)
# Make b+1 column with transformed data to show FW slope
a_b$b1 <- a_b$b +1
View(a_b)
install.packages("sse")
install.packages("pwr")
library(pwr)
# Parameters
alpha <- 0.05        # Significance level
effect_size <- 0.2   # Desired effect size (small, medium, or large)
power <- 0.80        # Desired power
# Calculate sample size
sample_size <- pwr.t.test(
d = effect_size,
sig.level = alpha,
power = power,
type = "two.sample"
)
sample_size$n
# Parameters
alpha <- 0.05           # Significance level
beta <- 0.20            # Desired power (1 - beta). 80% is common in the field. Based on Radwanski NE et al., 2012
sigma_squared <- 1.6   # Known variance
effect_size <- 0.25     # Desired effect size. Based on Radwanski NE et al., 2012
# Calculate critical values
Z_alpha_over_2 <- qnorm(1 - alpha/2)
Z_beta <- qnorm(1 - beta)
# Calculate sample size
sample_size <- (2 * (sigma_squared * (Z_alpha_over_2 + Z_beta)^2)) / effect_size^2
sample_size
# Parameters
alpha <- 0.05           # Significance level
beta <- 0.20            # Desired power (1 - beta). 80% is common in the field. Based on Radwanski NE et al., 2012
# Assume variance follows a normal distribution
# Calculate sigma_squared = (max-min)^2/n based on previous study Dahlinger et al., 1998
min <- 1.2 # Minimum value in range - Cya dose mg/kg/day required to maintain blood trough levels of 400-600 ng/mL ADJUST FOR RESULT YOU CARE ABOUT
max <- 5.2 # Maximum value in range - Cya dose mg/kg/day required to maintain blood trough levels of 400-600 ng/mL ADJUST FOR RESULT YOU CARE ABOUT
n <- 5 # Sample size
sigma_squared <- ((max-min))^2/n   # Estimated variance
effect_size <- 0.25     # Desired effect size. Based on Radwanski NE et al., 2012
# Calculate critical values
Z_alpha_over_2 <- qnorm(1 - alpha/2)
Z_beta <- qnorm(1 - beta)
# Calculate sample size
sample_size <- (2 * (sigma_squared * (Z_alpha_over_2 + Z_beta)^2)) / effect_size^2
sample_size
# Parameters
alpha <- 0.05 # Significance level
beta <- 0.20 # Desired power (1 - beta). 80% is common in the field. Based on Radwanski NE et al., 2012
# Assume variance follows a normal distribution
# Calculate sigma_squared = (max-min)^2/n based on previous study Dahlinger et al., 1998
min <- 1.2 # Minimum value in range - Cya dose mg/kg/day required to maintain blood trough levels of 400-600 ng/mL ADJUST FOR RESULT YOU CARE ABOUT
max <- 5.2 # Maximum value in range - Cya dose mg/kg/day required to maintain blood trough levels of 400-600 ng/mL ADJUST FOR RESULT YOU CARE ABOUT
n <- 5 # Sample size
sigma_squared <- ((max-min))^2/n   # Estimated variance
effect_size <- 0.25     # Desired effect size. Based on Radwanski NE et al., 2012
# Calculate critical values
Z_alpha_over_2 <- qnorm(1 - alpha/2)
Z_beta <- qnorm(1 - beta)
# Calculate sample size
sample_size <- (2 * (sigma_squared * (Z_alpha_over_2 + Z_beta)^2)) / effect_size^2
sample_size
sample_size <- 2 * (((Z_alpha_over_2 + Z_beta) * sigma_squared)/effect_size)^2
sample_size
# Parameters
alpha <- 0.05 # Significance level
beta <- 0.20 # Desired power (1 - beta). 80% is common in the field. Based on Radwanski NE et al., 2012
# Assume variance follows a normal distribution
# Calculate sigma_squared = (max-min)^2/n based on previous study Dahlinger et al., 1998
min <- 1.2 # Minimum value in range - Cya dose mg/kg/day required to maintain blood trough levels of 400-600 ng/mL ADJUST FOR RESULT YOU CARE ABOUT
max <- 5.2 # Maximum value in range - Cya dose mg/kg/day required to maintain blood trough levels of 400-600 ng/mL ADJUST FOR RESULT YOU CARE ABOUT
n <- 5 # Sample size
sigma_squared <- ((max-min))^2/n   # Estimated variance
# Effect size based on previous study Dahlinger et al., 1998
x_bar_treatment <- 3.4 # Mean of treatment for stat of interest
x_bar_control <- 14.5 # Mean of control for stat of interest
effect_size <- x_bar_experiment - x_bar_control  # Desired effect size
effect_size <- x_bar_treatment - x_bar_control  # Desired effect size
# Parameters
alpha <- 0.05 # Significance level
beta <- 0.20 # Desired power (1 - beta). 80% is common in the field. Based on Radwanski NE et al., 2012
# Assume variance follows a normal distribution
# Calculate sigma_squared = (max-min)^2/n based on previous study Dahlinger et al., 1998
min <- 1.2 # Minimum value in range - Cya dose mg/kg/day required to maintain blood trough levels of 400-600 ng/mL ADJUST FOR RESULT YOU CARE ABOUT
max <- 5.2 # Maximum value in range - Cya dose mg/kg/day required to maintain blood trough levels of 400-600 ng/mL ADJUST FOR RESULT YOU CARE ABOUT
n <- 5 # Sample size
sigma_squared <- ((max-min))^2/n   # Estimated variance
# Effect size based on previous study Dahlinger et al., 1998
x_bar_treatment <- 3.4 # Mean of treatment for stat of interest
x_bar_control <- 14.5 # Mean of control for stat of interest
effect_size <- x_bar_treatment - x_bar_control  # Desired effect size
# Calculate critical values
Z_alpha_over_2 <- qnorm(1 - alpha/2)
Z_beta <- qnorm(1 - beta)
# Calculate sample size
sample_size_chatGPT <- (2 * (sigma_squared * (Z_alpha_over_2 + Z_beta)^2)) / effect_size^2
sample_size_chatGPT
sample_size_mar <- 2 * (((Z_alpha_over_2 + Z_beta) * sigma_squared)/effect_size)^2
sample_size_mar
# Parameters
alpha <- 0.05 # Significance level
beta <- 0.20 # Desired power (1 - beta). 80% is common in the field. Based on Radwanski NE et al., 2012
# Assume variance follows a normal distribution
# Calculate sigma_squared = (max-min)^2/n based on previous study Dahlinger et al., 1998
min <- 1.2 # Minimum value in range - Cya dose mg/kg/day required to maintain blood trough levels of 400-600 ng/mL ADJUST FOR RESULT YOU CARE ABOUT
max <- 5.2 # Maximum value in range - Cya dose mg/kg/day required to maintain blood trough levels of 400-600 ng/mL ADJUST FOR RESULT YOU CARE ABOUT
n <- 5 # Sample size
sigma_squared <- ((max-min))^2/n   # Estimated variance
# Effect size based on previous study Dahlinger et al., 1998
x_bar_treatment <- 3.4 # Mean of treatment for stat of interest
x_bar_control <- 14.5 # Mean of control for stat of interest
effect_size <- x_bar_treatment - x_bar_control  # Desired effect size
# Calculate critical values
Z_alpha_over_2 <- qnorm(1 - alpha/2) # Two-tailed
Z_beta <- qnorm(1 - beta)
# Calculate sample size
sample_size <- 2 * (((Z_alpha_over_2 + Z_beta) * sigma_squared)/effect_size)^2
sample_size
# Parameters
alpha <- 0.05 # Significance level
beta <- 0.20 # Desired power (1 - beta). 80% is common in the field. Based on Radwanski NE et al., 2012
# Assume variance follows a normal distribution
# Calculate sigma_squared = (max-min)^2/n based on previous study Dahlinger et al., 1998
min <- 1.2 # Minimum value in range - Cya dose mg/kg/day required to maintain blood trough levels of 400-600 ng/mL ADJUST FOR RESULT YOU CARE ABOUT
max <- 5.2 # Maximum value in range - Cya dose mg/kg/day required to maintain blood trough levels of 400-600 ng/mL ADJUST FOR RESULT YOU CARE ABOUT
n <- 5 # Sample size
sigma_squared <- ((max-min))^2/n   # Estimated variance
# Effect size based on previous study Dahlinger et al., 1998
x_bar_treatment <- 3.4 # Mean of treatment for stat of interest
x_bar_control <- 14.5 # Mean of control for stat of interest
effect_size <- .25  # Desired effect size
# Calculate critical values
Z_alpha_over_2 <- qnorm(1 - alpha/2) # Two-tailed
Z_beta <- qnorm(1 - beta)
# Calculate sample size
sample_size <- 2 * (((Z_alpha_over_2 + Z_beta) * sigma_squared)/effect_size)^2
sample_size
# Parameters
alpha <- 0.05 # Significance level
beta <- 0.20 # Desired power (1 - beta). 80% is common in the field. Based on Radwanski NE et al., 2012
# Assume variance follows a normal distribution
# Calculate sigma_squared = (max-min)^2/n based on previous study Dahlinger et al., 1998
min <- 1.2 # Minimum value in range - Cya dose mg/kg/day required to maintain blood trough levels of 400-600 ng/mL ADJUST FOR RESULT YOU CARE ABOUT
max <- 5.2 # Maximum value in range - Cya dose mg/kg/day required to maintain blood trough levels of 400-600 ng/mL ADJUST FOR RESULT YOU CARE ABOUT
n <- 5 # Sample size
sigma_squared <- ((max-min))^2/n   # Estimated variance
# Effect size based on previous study Dahlinger et al., 1998
x_bar_treatment <- 3.4 # Mean of treatment for stat of interest
x_bar_control <- 14.5 # Mean of control for stat of interest
effect_size <- 7  # Desired effect size
# Calculate critical values
Z_alpha_over_2 <- qnorm(1 - alpha/2) # Two-tailed
Z_beta <- qnorm(1 - beta)
# Calculate sample size
sample_size <- 2 * (((Z_alpha_over_2 + Z_beta) * sigma_squared)/effect_size)^2
sample_size
# Parameters
alpha <- 0.05 # Significance level
beta <- 0.20 # Desired power (1 - beta). 80% is common in the field. Based on Radwanski NE et al., 2012
# Assume variance follows a normal distribution
# Calculate sigma_squared = (max-min)^2/n based on previous study Dahlinger et al., 1998
min <- 1.2 # Minimum value in range - Cya dose mg/kg/day required to maintain blood trough levels of 400-600 ng/mL ADJUST FOR RESULT YOU CARE ABOUT
max <- 5.2 # Maximum value in range - Cya dose mg/kg/day required to maintain blood trough levels of 400-600 ng/mL ADJUST FOR RESULT YOU CARE ABOUT
n <- 5 # Sample size
sigma_squared <- ((max-min))^2/n   # Estimated variance
# Effect size based on previous study Dahlinger et al., 1998
x_bar_treatment <- 3.4 # Mean of treatment for stat of interest
x_bar_control <- 14.5 # Mean of control for stat of interest
effect_size <- 5  # Desired effect size
# Calculate critical values
Z_alpha_over_2 <- qnorm(1 - alpha/2) # Two-tailed
Z_beta <- qnorm(1 - beta)
# Calculate sample size
sample_size <- 2 * (((Z_alpha_over_2 + Z_beta) * sigma_squared)/effect_size)^2
sample_size
effect_size <- x_bar_25percent - x_bar_control  # Desired effect size
x_bar_25percent <- 14.5 * .75 # Mean of treatment for stat of interest (predicted, 25% difference from control)
effect_size <- x_bar_25percent - x_bar_control  # Desired effect size
# Calculate critical values
Z_alpha_over_2 <- qnorm(1 - alpha/2) # Two-tailed
Z_beta <- qnorm(1 - beta)
# Calculate sample size
sample_size <- 2 * (((Z_alpha_over_2 + Z_beta) * sigma_squared)/effect_size)^2
sample_size
cat("The value of n is: ", sample_size) # Effect size is very large between treatment and control, which makes subsequent n unrealistically small. Need to alter based on expected outcome.
# Parameters
alpha <- 0.05 # Significance level
beta <- 0.20 # Desired power (1 - beta). 80% is common in the field. Based on Radwanski NE et al., 2012
# Assume variance follows a normal distribution
# Calculate sigma_squared = (max-min)^2/n based on previous study Dahlinger et al., 1998
min <- 1.2 # Minimum value in range - Cya dose mg/kg/day required to maintain blood trough levels of 400-600 ng/mL
max <- 5.2 # Maximum value in range - Cya dose mg/kg/day required to maintain blood trough levels of 400-600 ng/mL
n <- 5 # Sample size
sigma_squared <- ((max-min))^2/n   # Estimated variance
# Effect size based on previous study Dahlinger et al., 1998
x_bar_treatment <- 3.4 # Mean of treatment for stat of interest (observed)
x_bar_control <- 14.5 # Mean of control for stat of interest (observed)
x_bar_25percent <- 14.5 * .75 # Mean of treatment for stat of interest (predicted, 25% difference from control)
effect_size <- x_bar_treatment - x_bar_control  # Desired effect size
effect_size_25 <- x_bar_25percent - x_bar_control # Predicted effect size for 25% difference
# Calculate critical values
Z_alpha_over_2 <- qnorm(1 - alpha/2) # Two-tailed
Z_beta <- qnorm(1 - beta)
# Calculate sample size
sample_size_observed <- 2 * (((Z_alpha_over_2 + Z_beta) * sigma_squared)/effect_size)^2
cat("The value of n using observed data is: ", sample_size_observed) # Effect size is very large between treatment and control, which makes subsequent n unrealistically small. Need to alter based on expected outcome.
# Calculate sample size when using theoretical 25% effect size
sample_size_25 <- 2 * (((Z_alpha_over_2 + Z_beta) * sigma_squared)/effect_size_25)^2
cat("The value of n using 25% effect size is: ", sample_size_25)
# Load data
c <- read.csv("/Users/jcooper/Desktop/thesis_research/canopy_cover/2_canopy_traits/combined_years/results/canopy_cover_AUPC_slope_AVS.csv", check.names = FALSE)
# Load data
AMMI_point <- read.csv("/Users/jcooper/Desktop/thesis_research/canopy_cover/4_trait_stability/AMMI/results/AMMI_point.csv", check.names = FALSE)
# Cut excess columns
AMMI_point_short <- AMMI_point[,c(1:2, 13)]
# Pivot wide so each GDD is own column
wide_SI <- pivot_wider(AMMI_point_short, names_from = GDD, values_from = AVAMGE)
# Change Genotype column to index
wide_SI <- wide_SI %>% column_to_rownames("Genotype")
heatmaply(wide_SI,
dendrogram = "row",
xlab = "GDD", ylab = "Genotype",
main = "Point AMMI",
label_names = c("Genotype", "GDD:", "AVAMGE:"),
showticklabels = c(TRUE, FALSE)
)
library(tidyverse)
library(ggplot2)
library(agricolae)
library(tibble)
library(metan)
library(data.table)
devtools::install_github("ajaygpb/ammistability")
library(ammistability)
library(plotly)
library(hrbrthemes)
library(heatmaply)
# Heatmap of AMMI pover time
heatmaply(wide_SI,
dendrogram = "row",
xlab = "GDD", ylab = "Genotype",
main = "Point AMMI",
label_names = c("Genotype", "GDD:", "AVAMGE:"),
showticklabels = c(TRUE, FALSE)
)
# Change Genotype column to index
wide_SI <- wide_SI %>% column_to_rownames("Genotype")
# Pivot wide so each GDD is own column
wide_SI <- pivot_wider(AMMI_point_short, names_from = GDD, values_from = AVAMGE)
# Change Genotype column to index
wide_SI <- wide_SI %>% column_to_rownames("Genotype")
# Heatmap of AMMI pover time
heatmaply(wide_SI,
dendrogram = "row",
xlab = "GDD", ylab = "Genotype",
main = "Point AMMI",
label_names = c("Genotype", "GDD:", "AVAMGE:"),
showticklabels = c(TRUE, FALSE)
)
# Load data
AMMI_slope <- read.csv("/Users/jcooper/Desktop/thesis_research/canopy_cover/4_trait_stability/AMMI/results/AMMI_slope.csv", check.names = FALSE)
# Cut excess columns
AMMI_slope_short <- AMMI_slope[,c(1:2, 13)]
# Pivot wide so each GDD is own column
wide_SI <- pivot_wider(AMMI_slope_short, names_from = GDD, values_from = AVAMGE)
# Change Genotype column to index
wide_SI <- wide_SI %>% column_to_rownames("Genotype")
# Heatmap of AMMI over time
heatmaply(wide_SI,
dendrogram = "row",
xlab = "GDD", ylab = "Genotype",
main = "Slope AMMI",
label_names = c("Genotype", "GDD:", "AVAMGE:"),
showticklabels = c(TRUE, FALSE),
)
dev.off()
# Load data for R^2
area_y <- read.csv("/Users/jcooper/Desktop/thesis_research/canopy_cover/4_trait_stability/FW/results/FW_AUPC_y.csv", check.names = FALSE)
# Calculate correlations between y and yhat
area_y %>%
summarise(cor(yhat, y))
# Load slopes
area_b <- read.csv("/Users/jcooper/Desktop/thesis_research/canopy_cover/4_trait_stability/FW/results/FW_AUPC_b.csv", check.names = FALSE)
ggplot(area_b, aes(b)) +
geom_histogram() +
ggtitle("AUPC FW Slope Distribution")
# Load data for R^2
point_y <- read.csv("/Users/jcooper/Desktop/thesis_research/canopy_cover_master/stability/FW/data/FW_point_y.csv", check.names = FALSE)
# Calculate correlations between y and yhat
point_cor <- point_y %>%
group_by(GDD) %>%
summarise(cor(yhat, y)) %>%
ungroup()
# Format
colnames(point_cor) <- c("GDD", "R2")
# Plot
point_cor$GDD <- as.numeric(point_cor$GDD)
ggplot(point_cor, aes(GDD, R2)) +
geom_point() +
geom_line() +
ggtitle("Point FW Pred vs Obs R^2")
# Load data for R^2
point_y <- read.csv("/Users/jcooper/Desktop/thesis_research/canopy_cover/4_trait_stability/FW/results/FW_point_y.csv", check.names = FALSE)
# Calculate correlations between y and yhat
point_cor <- point_y %>%
group_by(GDD) %>%
summarise(cor(yhat, y)) %>%
ungroup()
# Format
colnames(point_cor) <- c("GDD", "R2")
# Plot
point_cor$GDD <- as.numeric(point_cor$GDD)
ggplot(point_cor, aes(GDD, R2)) +
geom_point() +
geom_line() +
ggtitle("Point FW Pred vs Obs R^2")
# Load data for FW slopes
point_b <- read.csv("/Users/jcooper/Desktop/thesis_research/canopy_cover/4_trait_stability/FW/results/FW_point_b.csv", check.names = FALSE)
